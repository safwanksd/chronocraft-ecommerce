<!-- views/user/order-failure.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Order Failed | ChronoCraft</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/order-success.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        .failure-icon {
            width: 60px;
            height: 60px;
            background-color: #ffcccc;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto;
        }

        .failure-icon .crossmark {
            font-size: 30px;
            color: #ff0000;
        }
    </style>
</head>

<body>
    <%- include('../partials/user/header.ejs') %>

        <div class="container mt-5 pt-5">
            <div class="card text-center p-4">
                <div class="failure-icon mb-3">
                    <span class="crossmark">✗</span>
                </div>
                <h2>Payment Failed</h2>
                <p class="text-muted">Sorry, there was an issue processing your payment for order #<%= order.orderNumber
                        %>. You can retry the payment below. <strong>Note:</strong> If you navigate away from this page,
                        the order will be marked as failed, and you will need to place a new order.</p>

                <div class="card mt-4 p-3">
                    <h5>Order Information</h5>
                    <div class="row g-2">
                        <div class="col-md-6">
                            <p><strong>Order Number</strong></p>
                            <p>#<%= order.orderNumber %>
                            </p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Order Date</strong></p>
                            <p>
                                <%= new Date(order.createdAt).toLocaleString('en-IN', { dateStyle: 'medium' ,
                                    timeStyle: 'short' }) %>
                            </p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Payment Method</strong></p>
                            <p>
                                <%= order.payment.method %>
                            </p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Payment Status</strong></p>
                            <p class="text-danger">
                                <%= order.payment.status %>
                            </p>
                        </div>
                    </div>
                </div>

                <div class="card mt-4 p-3">
                    <h5>Order Items</h5>
                    <% order.items.forEach(item=> { %>
                        <div class="d-flex align-items-center mb-3">
                            <img src="<%= item.product.variants[item.variantIndex].productImages[0] %>"
                                alt="<%= item.product.productName %>" class="success-product-image me-3">
                            <div class="flex-grow-1">
                                <h6>
                                    <%= item.product.productName %>
                                </h6>
                                <p class="text-muted">Color: <%= item.product.variants[item.variantIndex].colorName %> |
                                        Qty: <%= item.quantity %>
                                </p>
                                <p class="fw-bold">₹<%= (item.price * item.quantity).toLocaleString('en-IN') %>
                                </p>
                            </div>
                        </div>
                        <% }); %>
                </div>

                <div class="card mt-4 p-3">
                    <h5>Delivery Address</h5>
                    <p>
                        <%= order.shippingAddress.street %>, <%= order.shippingAddress.city %>,
                                <%= order.shippingAddress.state %> - <%= order.shippingAddress.pincode %>
                    </p>
                </div>

                <div class="card mt-4 p-3">
                    <h5>Price Details</h5>
                    <p>Items Total: ₹<%= order.pricing ? order.pricing.subtotal.toLocaleString('en-IN') : '0' %>
                    </p>
                    <p>GST (12%): ₹<%= order.pricing ? (order.pricing.subtotal * 0.12).toLocaleString('en-IN') : '0' %>
                    </p>
                    <p>Shipping Fee: ₹<%= order.pricing ? order.pricing.shippingFee.toLocaleString('en-IN') : '0' %>
                    </p>
                    <% if (order.pricing && order.pricing.discount && order.pricing.discount> 0) { %>
                        <p>Discount: -₹<%= order.pricing.discount.toLocaleString('en-IN') %>
                        </p>
                        <% } %>
                            <p><strong>Total Amount</strong>: ₹<%= order.pricing ?
                                    order.pricing.finalAmount.toLocaleString('en-IN') : '0' %>
                            </p>
                </div>

                <div class="mt-4">
                    <button class="btn btn-primary me-2" onclick="retryPayment('<%= order._id %>')">Retry
                        Payment</button>
                    <a href="/user/orders" class="btn btn-secondary">Back to Orders</a>
                </div>
            </div>
        </div>

        <%- include('../partials/user/footer.ejs') %>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                async function retryPayment(orderId) {
                    try {
                        const response = await fetch('/user/checkout/initiate-payment', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                orderId: orderId,
                                amount: <%= order.pricing.finalAmount %>
                    }),
                        });
                        const paymentData = await response.json();

                        if (paymentData.success) {
                            const options = {
                                key: '<%= razorpayKeyId %>',
                                amount: paymentData.order.amount,
                                currency: 'INR',
                                name: 'ChronoCraft',
                                description: `Retry Payment for Order #<%= order.orderNumber %>`,
                                order_id: paymentData.order.id,
                                handler: async function (response) {
                                    const verifyResponse = await fetch('/user/checkout/verify-payment', {
                                        method: 'POST',
                                        headers: { 'Content-Type': 'application/json' },
                                        body: JSON.stringify({
                                            razorpay_order_id: response.razorpay_order_id,
                                            razorpay_payment_id: response.razorpay_payment_id,
                                            razorpay_signature: response.razorpay_signature,
                                            orderId: orderId,
                                        }),
                                    });
                                    const verifyData = await verifyResponse.json();

                                    if (verifyData.success) {
                                        window.location.href = `/user/order-success/${orderId}`;
                                    } else {
                                        Swal.fire({
                                            toast: true,
                                            position: 'top-end',
                                            icon: 'error',
                                            title: 'Payment failed again. Please try again.',
                                            showConfirmButton: false,
                                            timer: 2000
                                        });
                                        setTimeout(() => {
                                            window.location.reload();
                                        }, 2000);
                                    }
                                },
                                prefill: {
                                    name: '<%= user.name %>',
                                    email: '<%= user.email %>',
                                },
                                theme: {
                                    color: '#F37254',
                                },
                                modal: {
                                    ondismiss: async function () {

                                        window.location.reload();
                                    },
                                },
                            };

                            const rzp = new Razorpay(options);
                            rzp.on('payment.failed', async function (response) {

                                Swal.fire({
                                    toast: true,
                                    position: 'top-end',
                                    icon: 'error',
                                    title: 'Payment failed. Please try again.',
                                    showConfirmButton: false,
                                    timer: 2000
                                });
                                setTimeout(() => {
                                    window.location.reload();
                                }, 2000);
                            });
                            rzp.open();
                        } else {
                            Swal.fire({
                                toast: true,
                                position: 'top-end',
                                icon: 'error',
                                title: 'Failed to initiate payment retry',
                                showConfirmButton: false,
                                timer: 2000
                            });
                        }
                    } catch (error) {
                        console.error('Retry payment error:', error);
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'error',
                            title: 'Server error. Please try again.',
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                }
            </script>
</body>

</html>