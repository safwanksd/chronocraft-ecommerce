<!DOCTYPE html>
<html lang="en">
<head>
    <title>Edit Address | CHRONOCRAFT The Watch Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/shop.css"> <!-- Reusing shop.css for consistency -->
    <link rel="stylesheet" href="/css/profile.css"> <!-- Reusing profile.css for sidebar -->
    <link rel="stylesheet" href="/css/edit-address.css"> <!-- Custom CSS for edit address -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <%- include('../partials/user/header') %>

    <div class="container-fluid profile-container mt-5 py-5">
        <div class="row">
            <!-- Left Sidebar -->
            <div class="col-lg-3 col-md-4 sidebar">
                <div class="profile-sidebar text-center">
                    <a href="/user/profile/edit" class="btn btn-black mb-4">Profile Edit</a>
                    <ul class="nav flex-column sidebar-nav">
                        <li class="nav-item">
                            <a class="nav-link" href="/user/profile">Account Overview</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/orders">My Orders</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="/user/profile/addresses">Manage Address</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/wallet">Wallet</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/user/profile/change-password">Manage Password</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link logout-btn" href="/user/logout">LOG OUT</a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-lg-9 col-md-8 main-content">
                <h2 class="text-center mb-5 text-black text-shadow">Edit Address</h2>
                <div class="edit-address-container card p-4">
                    <h3 class="subheading mb-4">Edit Address</h3>
                    <form id="editAddressForm" method="POST" action="/user/profile/addresses/edit/<%= address._id %>">
                        <div class="mb-3">
                            <label for="street" class="form-label">Street:</label>
                            <input type="text" class="form-control" id="street" name="street" value="<%= address.street %>" required>
                            <div id="errorStreet" class="error-message mt-1"></div>
                        </div>
                        <div class="mb-3">
                            <label for="city" class="form-label">City:</label>
                            <input type="text" class="form-control" id="city" name="city" value="<%= address.city %>" required>
                            <div id="errorCity" class="error-message mt-1"></div>
                        </div>
                        <div class="mb-3">
                            <label for="state" class="form-label">State:</label>
                            <input type="text" class="form-control" id="state" name="state" value="<%= address.state %>" required>
                            <div id="errorState" class="error-message mt-1"></div>
                        </div>
                        <div class="mb-3">
                            <label for="pincode" class="form-label">Pincode:</label>
                            <input type="text" class="form-control" id="pincode" name="pincode" value="<%= address.pincode %>" required>
                            <div id="errorPincode" class="error-message mt-1"></div>
                        </div>
                        <div class="mb-4 form-check">
                            <input type="checkbox" class="form-check-input" id="isDefault" name="isDefault" <%= address.isDefault ? 'checked' : '' %>>
                            <label class="form-check-label" for="isDefault">Set as Default</label>
                        </div>
                        <div class="d-flex gap-3">
                            <button type="submit" class="btn btn-black">Save</button>
                            <a href="/user/profile/addresses" class="btn btn-outline-black">Back</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/user/footer.ejs') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            console.log("ðŸŸ¢ Edit Address Page Loaded!");

            // Toast container setup
            const toastContainer = document.createElement('div');
            toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
            document.body.appendChild(toastContainer);

            // Function to show toast
            function showToast(message, type = 'success') {
                const toast = document.createElement('div');
                toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0`;
                toast.role = 'alert';
                toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                `;
                toastContainer.appendChild(toast);
                const bsToast = new bootstrap.Toast(toast);
                bsToast.show();
                setTimeout(() => toast.remove(), 5000);
            }

            // Logout functionality
            document.querySelector(".logout-btn").addEventListener("click", function (event) {
                event.preventDefault();
                fetch("/user/logout")
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            window.location.href = data.redirectUrl;
                        }
                    })
                    .catch(error => console.error("Logout failed:", error));
            });

            // Form validation
            const form = document.getElementById("editAddressForm");
            const street = document.getElementById("street");
            const city = document.getElementById("city");
            const state = document.getElementById("state");
            const pincode = document.getElementById("pincode");

            const errorStreet = document.getElementById("errorStreet");
            const errorCity = document.getElementById("errorCity");
            const errorState = document.getElementById("errorState");
            const errorPincode = document.getElementById("errorPincode");

            const streetPattern = /^.+$/;
            const cityPattern = /^[a-zA-Z\s]{2,}$/;
            const statePattern = /^[a-zA-Z\s]{2,}$/;
            const pincodePattern = /^\d{6}$/;

            function validateField(input, pattern, errorElement, errorMessage) {
                if (!pattern.test(input.value.trim())) {
                    errorElement.style.display = "block";
                    errorElement.textContent = errorMessage;
                    return false;
                } else {
                    errorElement.style.display = "none";
                    errorElement.textContent = "";
                    return true;
                }
            }

            street.addEventListener("input", () => validateField(street, streetPattern, errorStreet, "Street cannot be empty"));
            city.addEventListener("input", () => validateField(city, cityPattern, errorCity, "City must be at least 2 letters"));
            state.addEventListener("input", () => validateField(state, statePattern, errorState, "State must be at least 2 letters"));
            pincode.addEventListener("input", () => validateField(pincode, pincodePattern, errorPincode, "Pincode must be 6 digits"));

            form.addEventListener("submit", async (e) => {
                e.preventDefault();
                const isStreetValid = validateField(street, streetPattern, errorStreet, "Street cannot be empty");
                const isCityValid = validateField(city, cityPattern, errorCity, "City must be at least 2 letters");
                const isStateValid = validateField(state, statePattern, errorState, "State must be at least 2 letters");
                const isPincodeValid = validateField(pincode, pincodePattern, errorPincode, "Pincode must be 6 digits");

                if (!(isStreetValid && isCityValid && isStateValid && isPincodeValid)) {
                    showToast("Please correct the errors before submitting.", "danger");
                    return;
                }

                try {
                    const response = await fetch(`/user/profile/addresses/edit/<%= address._id %>`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            street: street.value,
                            city: city.value,
                            state: state.value,
                            pincode: pincode.value,
                            isDefault: document.getElementById("isDefault").checked
                        })
                    });
                    const data = await response.json();

                    if (data.success) {
                        showToast(data.message || "Address updated successfully!", "success");
                        setTimeout(() => window.location.href = data.redirectUrl, 1500);
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Update Failed',
                            text: data.message || "Failed to update address",
                            confirmButtonText: 'OK',
                            customClass: { confirmButton: 'btn btn-black' }
                        });
                    }
                } catch (error) {
                    console.error("Error updating address:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'Something went wrong. Please try again later.',
                        confirmButtonText: 'OK',
                        customClass: { confirmButton: 'btn btn-black' }
                    });
                }
            });
        });
    </script>
</body>
</html>