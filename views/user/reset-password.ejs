<!-- views/user/reset-password.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password - ChronoCraft</title>
    <link rel="stylesheet" href="/css/forgot-password.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap"
        rel="stylesheet">
    <!-- Toastify CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
</head>

<body>
    <div class="forgot-container">
        <!-- Left Side: Full-Size Image -->
        <div class="forgot-image">
            <img src="/images/login-page-watch-image-.jpg" alt="Model Wearing Watch" class="image">
        </div>

        <!-- Right Side: Reset Password Form Card -->
        <div class="forgot-form">
            <div class="forgot-card">
                <div class="logo-space">
                    <img src="/images/Chronocraft Logo 2 transp copy.png" alt="CHRONOCRAFT Logo" class="logo">
                </div>
                <h1 class="welcome-text">Reset Password</h1>
                <p class="info-text">Enter your new password below.</p>

                <% if (message) { %>
                    <div class="alert-message">
                        <%= message %>
                    </div>
                    <% } %>
                        <form action="/user/reset-password" method="POST" class="forgot-form-content" id="resetForm">
                            <div class="form-group" style="position: relative;">
                                <input type="password" id="password" name="password" placeholder="New Password"
                                    required>
                                <i class="fas fa-eye password-toggle" id="passwordToggle"
                                    style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer; color: #555;"></i>
                                <div id="error4" class="error-message"></div>
                            </div>
                            <div class="form-group" style="position: relative;">
                                <input type="password" id="confirmPassword" name="confirmPassword"
                                    placeholder="Confirm Password" required>
                                <i class="fas fa-eye password-toggle" id="confirmPasswordToggle"
                                    style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer; color: #555;"></i>
                                <div id="error5" class="error-message"></div>
                            </div>
                            <button type="submit" class="submit-btn">Reset Password</button>
                            <div class="form-footer">
                                <p>Back to <a href="/user/login" class="text-link">Login</a></p>
                            </div>
                        </form>
            </div>
        </div>
    </div>

    <!-- Toastify JS -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const resetForm = document.getElementById("resetForm");
            const passid = document.getElementById("password");
            const cpassid = document.getElementById("confirmPassword");
            const error4 = document.getElementById("error4");
            const error5 = document.getElementById("error5");

            const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*?&]{6,}$/;

            // Toastify Configuration (matches signup.ejs)
            function showToast(message, type = 'error') {
                const backgroundColor = type === 'success' ? '#d4a017' : '#ff4d4d';
                Toastify({
                    text: message,
                    duration: 3000,
                    close: true,
                    gravity: "top",
                    position: "right",
                    style: {
                        background: backgroundColor,
                        color: type === 'success' ? '#000' : '#f5f5f5',
                        fontFamily: 'Montserrat, sans-serif',
                        fontSize: '0.9rem',
                        fontWeight: '400',
                        borderRadius: '6px',
                        boxShadow: '0 4px 15px rgba(0, 0, 0, 0.3)',
                    }
                }).showToast();
            }

            // Show server-side message as toast if present
            <% if (message) { %>
                showToast("<%= message %>");
            <% } %>

                // Validation Functions (from signup.ejs)
                function validateField(input, pattern, errorElement, errorMessage) {
                    if (!pattern.test(input.value.trim())) {
                        errorElement.style.display = "block";
                        errorElement.innerHTML = errorMessage;
                        return false;
                    } else {
                        errorElement.style.display = "none";
                        errorElement.innerHTML = "";
                        return true;
                    }
                }

            function validatePasswordMatch() {
                if (passid.value !== cpassid.value) {
                    error5.style.display = "block";
                    error5.innerHTML = "Passwords do not match!";
                    return false;
                } else {
                    error5.style.display = "none";
                    error5.innerHTML = "";
                    return true;
                }
            }

            // Real-time Validation
            passid.addEventListener("input", () => validateField(passid, passwordPattern, error4, "Password must have min 6 characters, including a number."));
            cpassid.addEventListener("input", validatePasswordMatch);

            // Password Visibility Toggle
            const passwordToggle = document.getElementById('passwordToggle');
            const confirmPasswordToggle = document.getElementById('confirmPasswordToggle');

            if (passwordToggle) {
                passwordToggle.addEventListener('click', function () {
                    const passwordInput = document.getElementById('password');
                    passwordInput.type = passwordInput.type === 'password' ? 'text' : 'password';
                    this.classList.toggle('fa-eye-slash');
                });
            }

            if (confirmPasswordToggle) {
                confirmPasswordToggle.addEventListener('click', function () {
                    const confirmPasswordInput = document.getElementById('confirmPassword');
                    confirmPasswordInput.type = confirmPasswordInput.type === 'password' ? 'text' : 'password';
                    this.classList.toggle('fa-eye-slash');
                });
            }

            // Form Submission Validation
            if (resetForm) {
                resetForm.addEventListener('submit', function (e) {
                    e.preventDefault();

                    const isPasswordValid = validateField(passid, passwordPattern, error4, "Password must have min 6 characters, including a number.");
                    const isPasswordMatch = validatePasswordMatch();

                    if (!isPasswordValid) {
                        showToast("Password must have min 6 characters, including a number.");
                        return;
                    }

                    if (!isPasswordMatch) {
                        showToast("Passwords do not match. Please try again.");
                        return;
                    }

                    // If validation passes, submit the form
                    this.submit();
                });
            }
        });
    </script>
</body>

</html>