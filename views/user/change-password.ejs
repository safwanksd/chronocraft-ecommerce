<!-- views/user/change-password.ejs -->

<!DOCTYPE html>
<html lang="en">

<head>
    <title>Manage Password | CHRONOCRAFT The Watch Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/shop.css">
    <link rel="stylesheet" href="/css/profile.css">
    <link rel="stylesheet" href="/css/change-password.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@400;500;600;700&family=Montserrat:wght@300;400;500;600&display=swap"
        rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
    <%- include('../partials/user/header') %>

        <div class="container-fluid profile-container mt-5 py-5">
            <div class="row">
                <!-- Left Sidebar -->
                <div class="col-lg-3 col-md-4 sidebar">
                    <div class="profile-sidebar text-center">
                        <a href="/user/profile/edit" class="btn btn-black mb-4">Profile Edit</a>
                        <ul class="nav flex-column sidebar-nav">
                            <li class="nav-item">
                                <a class="nav-link" href="/user/profile">Account Overview</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/user/orders">My Orders</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/user/profile/addresses">Manage Address</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="/user/wallet">Wallet</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" href="/user/profile/change-password">Manage Password</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link logout-btn" href="/user/logout">LOG OUT</a>
                            </li>
                        </ul>
                    </div>
                </div>

                <!-- Main Content -->
                <div class="col-lg-9 col-md-8 main-content">
                    <h2 class="text-center mb-5 text-black text-shadow">Manage Password</h2>
                    <div class="change-password-container card p-4">
                        <h3 class="subheading mb-4">Change Password</h3>
                        <% if (message) { %>
                            <p class="error-message">
                                <%= message %>
                            </p>
                            <% } %>
                                <form id="changePasswordForm" method="POST" action="/user/profile/change-password">
                                    <div class="mb-3 position-relative">
                                        <label for="oldPassword" class="form-label">Old Password:</label>
                                        <input type="password" class="form-control" id="oldPassword" name="oldPassword"
                                            required>
                                        <i class="fas fa-eye password-toggle" id="oldPasswordToggle"></i>
                                        <div id="errorOldPassword" class="error-message mt-1"></div>
                                    </div>
                                    <div class="mb-3 position-relative">
                                        <label for="newPassword" class="form-label">New Password:</label>
                                        <input type="password" class="form-control" id="newPassword" name="newPassword"
                                            required>
                                        <i class="fas fa-eye password-toggle" id="newPasswordToggle"></i>
                                        <div id="errorNewPassword" class="error-message mt-1"></div>
                                    </div>
                                    <div class="mb-4 position-relative">
                                        <label for="confirmPassword" class="form-label">Confirm New Password:</label>
                                        <input type="password" class="form-control" id="confirmPassword"
                                            name="confirmPassword" required>
                                        <i class="fas fa-eye password-toggle" id="confirmPasswordToggle"></i>
                                        <div id="errorConfirmPassword" class="error-message mt-1"></div>
                                    </div>
                                    <div class="d-flex gap-3">
                                        <button type="submit" class="btn btn-black">Change Password</button>
                                        <a href="/user/profile" class="btn btn-outline-black">Back</a>
                                    </div>
                                </form>
                    </div>
                </div>
            </div>
        </div>

        <%- include('../partials/user/footer.ejs') %>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    console.log("ðŸŸ¢ Manage Password Page Loaded!");

                    // Toast container setup
                    const toastContainer = document.createElement('div');
                    toastContainer.className = 'toast-container position-fixed top-0 end-0 p-3';
                    document.body.appendChild(toastContainer);

                    // Function to show toast
                    function showToast(message, type = 'success') {
                        const toast = document.createElement('div');
                        toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0`;
                        toast.role = 'alert';
                        toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">${message}</div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                `;
                        toastContainer.appendChild(toast);
                        const bsToast = new bootstrap.Toast(toast);
                        bsToast.show();
                        setTimeout(() => toast.remove(), 5000);
                    }

            // Show server-side message if present
            <% if (message) { %>
                        showToast("<%= message %>", "danger");
            <% } %>

                        // Logout functionality
                        document.querySelector(".logout-btn").addEventListener("click", function (event) {
                            event.preventDefault();
                            fetch("/user/logout")
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        window.location.href = data.redirectUrl;
                                    }
                                })
                                .catch(error => console.error("Logout failed:", error));
                        });

                    // Form validation
                    const form = document.getElementById("changePasswordForm");
                    const oldPassword = document.getElementById("oldPassword");
                    const newPassword = document.getElementById("newPassword");
                    const confirmPassword = document.getElementById("confirmPassword");

                    const errorOldPassword = document.getElementById("errorOldPassword");
                    const errorNewPassword = document.getElementById("errorNewPassword");
                    const errorConfirmPassword = document.getElementById("errorConfirmPassword");

                    const passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*?&]{6,}$/;

                    function validateField(input, pattern, errorElement, errorMessage) {
                        if (!pattern.test(input.value.trim())) {
                            errorElement.style.display = "block";
                            errorElement.textContent = errorMessage;
                            return false;
                        } else {
                            errorElement.style.display = "none";
                            errorElement.textContent = "";
                            return true;
                        }
                    }

                    function validatePasswordMatch() {
                        if (newPassword.value !== confirmPassword.value) {
                            errorConfirmPassword.style.display = "block";
                            errorConfirmPassword.textContent = "Passwords do not match!";
                            return false;
                        } else {
                            errorConfirmPassword.style.display = "none";
                            errorConfirmPassword.textContent = "";
                            return true;
                        }
                    }

                    oldPassword.addEventListener("input", () => validateField(oldPassword, passwordPattern, errorOldPassword, "Invalid format"));
                    newPassword.addEventListener("input", () => validateField(newPassword, passwordPattern, errorNewPassword, "Min 6 chars, 1 letter, 1 number"));
                    confirmPassword.addEventListener("input", validatePasswordMatch);

                    // Password toggle functionality
                    const toggles = [
                        { toggle: document.getElementById("oldPasswordToggle"), input: oldPassword },
                        { toggle: document.getElementById("newPasswordToggle"), input: newPassword },
                        { toggle: document.getElementById("confirmPasswordToggle"), input: confirmPassword }
                    ];

                    toggles.forEach(({ toggle, input }) => {
                        toggle.addEventListener("click", function () {
                            input.type = input.type === "password" ? "text" : "password";
                            this.classList.toggle("fa-eye-slash");
                        });
                    });

                    // Form submission
                    form.addEventListener("submit", async function (e) {
                        e.preventDefault();

                        const isOldValid = validateField(oldPassword, passwordPattern, errorOldPassword, "Invalid format");
                        const isNewValid = validateField(newPassword, passwordPattern, errorNewPassword, "Min 6 chars, 1 letter, 1 number");
                        const isMatchValid = validatePasswordMatch();

                        if (!(isOldValid && isNewValid && isMatchValid)) {
                            showToast("Please correct the errors before submitting.", "danger");
                            return;
                        }

                        try {
                            const response = await fetch(form.action, {
                                method: "POST",
                                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                                body: new URLSearchParams({
                                    oldPassword: oldPassword.value,
                                    newPassword: newPassword.value,
                                    confirmPassword: confirmPassword.value
                                }).toString()
                            });

                            if (response.redirected) {
                                const redirectUrl = response.url;
                                if (redirectUrl.includes("/user/profile")) {
                                    showToast("Password changed successfully!", "success");
                                    setTimeout(() => window.location.href = redirectUrl, 1500);
                                }
                            } else {
                                const result = await response.text();
                                const parser = new DOMParser();
                                const doc = parser.parseFromString(result, "text/html");
                                const errorMessage = doc.querySelector(".error-message")?.textContent || "An error occurred";

                                Swal.fire({
                                    icon: "error",
                                    title: "Change Failed",
                                    text: errorMessage,
                                    confirmButtonText: "OK",
                                    customClass: { confirmButton: "btn btn-black" }
                                });
                            }
                        } catch (error) {
                            console.error("Error changing password:", error);
                            Swal.fire({
                                icon: "error",
                                title: "Server Error",
                                text: "Something went wrong. Please try again later.",
                                confirmButtonText: "OK",
                                customClass: { confirmButton: "btn btn-black" }
                            });
                        }
                    });
                });
            </script>
</body>

</html>